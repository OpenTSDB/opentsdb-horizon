// **
// * This file is part of OpenTSDB.
// * Copyright (C) 2021  Yahoo.
// *
// * Licensed under the Apache License, Version 2.0 (the "License");
// * you may not use this file except in compliance with the License.
// * You may obtain a copy of the License at
// *
// *   http://www.apache.org/licenses/LICENSE-2.0
// *
// * Unless required by applicable law or agreed to in writing, software
// * distributed under the License is distributed on an "AS IS" BASIS,
// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// * See the License for the specific language governing permissions and
// * limitations under the License.
// *

// **
// * COMMON STYLES FOR WDATE TIME
// **/

@import 'loader-component';

$mono-fontface: map-get($app-fontface-config, mono);

.event-stream {
    display: flex;
    flex: 1;
    flex-direction: column;
    min-height: 100%;
    position: relative;

    .event-stream-list {
        //min-width: 500px;
        //max-height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        overflow: overlay;

        &.not-ready {
            display: none;
        }

        //.event-accordion.mat-accordion { }

        .event-panel.mat-expansion-panel {
            @include mat-elevation(0);
            border-radius: 0;

            .mat-expansion-panel-header {
                flex-direction: row-reverse;
                cursor: pointer;
                border-radius: 0;

                .mat-expansion-indicator {
                    margin-right: 12px;
                    margin-top: -6px;
                }
            }

            .mat-expansion-panel-header-title {
                font-size: mat-font-size($mono-fontface, body-1);

                .event-time {
                    font-family: mat-font-family($mono-fontface);
                    margin-right: 12px;
                }

                //.event-count {}
            }

            .mat-expansion-panel-body {
                padding: 0;
                font-size: 12px;
                line-height: 12px;

                .event-description {
                    margin-top: 5px;
                }

                .tag-key {
                    font-weight: bold;
                }

                .tag-value {
                    padding-left: 4px;
                    font-family: mat-font-family($mono-fontface);
                    word-break: break-all;
                }

                fieldset {
                    border-radius: 5px;
                    padding: 5px;
                }

                legend {
                    padding-left: 2px;
                    padding-right: 2px;
                }

                .event-summary {
                    padding: 0px 24px 8px 30px;

                    .event-tags {
                        margin-top: 5px;
                        margin-bottom: 5px;
                        .event-tag {
                            float: left;
                            margin-left: 5px;
                            margin-bottom: 6px;
                            padding-left: 5px;
                            padding-right: 5px;
                            // padding-bottom: 5px;
                        }
                    }

                    .event-properties {

                        .event-property {
                            float: left;
                            margin-left: 5px;
                            margin-bottom: 6px;
                            padding-left: 5px;
                            padding-right: 5px;
                            // padding-bottom: 5px;
                        }
                    }

                    .event-message {
                        margin-top: 5px;
                    }
                }

                .max-error-message {
                    padding-left: 10px;
                }

                .event-summary {
                    padding: 8px 24px 8px 46px;
                }

                .event-header {
                    :not(:last-child) {
                        margin-right: 6px;
                    }
                    .event-time {
                        font-family: mat-font-family($mono-fontface);
                        font-size: mat-font-size($mono-fontface, caption);
                    }
                }

                .event-header,
                .event-description,
                .event-namespace,
                .event-priority,
                .event-tag {
                    span:not(:last-child),
                    strong:not(:last-child) {
                        margin-right: 6px;
                    }
                }

                .event-tag {
                    margin-right: 12px;
                }

                .event-details-wrapper {
                    .mat-button {
                        min-width: initial;
                        padding: 0 4px;
                        line-height: initial;
                        margin: 4px 0 4px -4px;

                        font-size: 12px;

                        .mat-icon {
                            @include sizeDenaliIcon(12px);
                            margin-left: 6px;
                        }
                    }

                    .event-details {
                        padding: 6px;
                        border-radius: 4px;
                        font-family: mat-font-family($mono-fontface);
                        font-size: mat-font-size($mono-fontface, caption);
                    }
                }
            }

            // when event-panel (accordion item) is open
            &.mat-expanded {
                .mat-expansion-panel-header {
                    font-weight: bold;
                    .mat-expansion-indicator {
                        margin-top: 2px;
                    }
                }
            }
        }
    }

    @-moz-document url-prefix() {
        .event-stream-list {
            overflow: auto;
        }
    }

    // MATERIAL FIXES
    .mat-expansion-panel-header {
        // If the panel, that the header is in, is inside an element being animated by Angular,
        // the default behavior is to block all child animations. This means that the header's
        // height won't kick in until the parent animation is done. We add a fallback to the
        // header's default height. If the animations aren't blocked, these styles will be overridden
        // by the inline styles from the animations module.
        .ng-animating .mat-expansion-panel & {
            min-height: 32px;
        }

        .ng-animating .mat-expansion-panel.mat-expanded & {
            min-height: 32px;
        }
    }

    .mat-expansion-panel-content {

        // If the expansion panel is inside an element being animated by Angular,
        // the default behavior is to block all child animations. This means that the
        // default `height: 0` won't kick in until the parent animation is over, which
        // will cause the panel to appear open, before it snaps into place. We don't want
        // to set the default height to zero, because it'll break the `height: '*'` from
        // the animation definitions. Instead we add a fallback that only applies only if
        // it's inside a parent that is mid-animation.
        .ng-animating .mat-expansion-panel:not(.mat-expanded) & {
            height: 0;
            overflow: hidden;
        }
    }
}

// * THEME VARIANTS
@include init-component-variants() {

    .event-stream {
        .event-stream-list {
            background: mat-color($background, card);

            .event-panel.mat-expansion-panel {
                .mat-expansion-panel-header {
                    &:hover {
                        background: mat-color($foreground, darker-divider);
                    }
                }

                .mat-expansion-panel-body {
                    .event-summary {
                        border-top: if($is-dark, 1px solid $black, 1px solid #e0e0e0);

                        &:not(:last-child) {
                            border-bottom: 1px solid mat-color($foreground, lighter-divider);
                        }

                        &:hover {
                            background: mat-color($primary, default, .10);
                        }

                        .event-details {
                            border: 1px solid mat-color($foreground, divider);
                            background: mat-color($foreground, lighter-divider);
                        }

                        fieldset {
                            background: if($is-dark, mat-color($background, background), $white);
                            border: if($is-dark, 1px solid $black, 1px solid #e0e0e0);
                        }

                        .event-summary {
                            background: mat-color($foreground, lighter-divider);

                            &:not(:last-child) {
                                border-bottom: 1px solid mat-color($foreground, lighter-divider);
                            }
                        }

                        .event-tag {
                            background: mat-color($foreground, lighter-divider);
                            border-radius: 5px;
                        }

                        .event-property {
                            background: mat-color($foreground, lighter-divider);
                            border-radius: 5px;
                        }
                    }
                }

                // when event-panel (accordion item) is open
                &.mat-expanded {
                    .mat-expansion-panel-header {
                    //    .mat-expansion-indicator { }
                        background: mat-color($foreground, lighter-divider);
                    }

                    .mat-expansion-panel-body {
                        border-bottom: 1px solid mat-color($foreground, divider);
                    }
                }
            }
        }
    }
}

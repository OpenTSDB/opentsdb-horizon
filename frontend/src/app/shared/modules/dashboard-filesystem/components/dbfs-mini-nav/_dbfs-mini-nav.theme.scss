@use '~@angular/material' as mat;
@mixin dbfs-mini-nav-component-theme() {

    $cssVarMap: get-theme-css-variables($theme-name);
    $cssText: get-theme-css-text($theme-name);

    $status-success: mat.get-color-from-palette($other, status-success);

    // TODO: Need to add navbar-config to theme
    /*$sn-light: map-get($navbar-config, sn-light);
    $sn-dark: map-get($navbar-config, sn-dark);
    $sn-light-text: map-get($navbar-config, sn-light-text);
    $sn-dark-text: map-get($navbar-config, sn-dark-text);
    $sn-seperator: map-get($navbar-config, sn-seperator);
    $sn-active: map-get($navbar-config, sn-active);*/

    $divider: mat.get-color-from-palette($foreground, divider);

    $navbar-background: mat.get-color-from-palette($background, navbar);
    $navbar-text: mat.get-color-from-palette($foreground, navbar-text);

    $text-color: mat.get-color-from-palette($background, navbar);
    $navbar-text-color: mat.get-color-from-palette($foreground, navbar-text);

    $menu-background: mat.get-color-from-palette($background, card);
    // TODO: need to have preprocessed colors in the theme-config
    $menu-background-raw-value: _mat-convert-variable-to-color(map-get($background, card), $cssVarMap);
    $menu-background-hover: find-color-invert($menu-background-raw-value);

    $item-text: if(
        $is-dark,
        mat.get-color-from-palette($foreground, navbar-text, .6),
        mat.get-color-from-palette($background, navbar, .85)
    );
    $icon-color: $item-text;

    $menu-divider: if(
        $is-dark,
        $divider,
        $navbar-background
    );

    .mini-navigator-component {
        background-color: if(
            $is-dark,
            lighten($menu-background-raw-value, 15%),
            $menu-background
        );

        .mini-navigator-toolbar {
            background: transparent;
            color: if(
                $is-dark,
                mat.get-color-from-palette($foreground, navbar-text, .6),
                mat.get-color-from-palette($background, navbar, .85)
            );
            box-shadow: inset 0 -1px 0 0 if(
                $is-dark,
                mat.get-color-from-palette($foreground, divider, .12),
                mat.get-color-from-palette($background, navbar, .12)
            );
        }

        .mini-navigator-actions {
            color: if(
                $is-dark,
                mat.get-color-from-palette($foreground, navbar-text, .6),
                mat.get-color-from-palette($background, navbar, .85)
            );
            box-shadow: inset 0 1px 0 0 if(
                $is-dark,
                mat.get-color-from-palette($foreground, divider, .12),
                mat.get-color-from-palette($background, navbar, .12)
            );
        }

        // FOLDERS LIST
        .mini-navigator-folders {
            // content here

            .mat-list .mat-list-item,
            .mat-nav-list .mat-list-item {
                color: if(
                    $is-dark,
                    mat.get-color-from-palette($foreground, navbar-text, .65),
                    mat.get-color-from-palette($background, navbar, .65)
                );

                &.is-active,
                &.is-selected {
                    color:  mat.get-color-from-palette($foreground, navbar-text, .85);
                }

                &.is-selected {
                    background-color: mat.get-color-from-palette($background, navbar);
                }

                &:not(:last-child) {
                    border-bottom: 1px solid if(
                        $is-dark,
                        mat.get-color-from-palette($foreground, divider, .07),
                        mat.get-color-from-palette($background, navbar, .07)
                    );
                }

                &:first-child {
                    border-top: 1px solid transparent;
                }
            }

        }

        // FOLDER ITEM
        .mini-navigator-folder-item {
            .save-folder-name {
                color: mat.get-color-from-palette($other, status-success);
            }

            .list-item.edit-form {
                .mat-form-field {
                    .mat-input-element::placeholder {
                        color:  mat.get-color-from-palette($foreground, navbar-text, .25);
                    }
                }
            }

            .dnav-folder-menu {
                .mat-icon-button {
                    background: rgba($black, .2);
                }
            }
        }
    }

    // cdk items

    .dnav-cdk-mini-navigator.mat-menu-panel {
        background-color: if(
            $is-dark,
            lighten($menu-background-raw-value, 15%),
            mat.get-color-from-palette($background, card)
        );
        border: 1px solid mat.get-color-from-palette($background, navbar, .15);

        .mat-menu-item {
            color: if(
                $is-dark,
                mat.get-color-from-palette($foreground, navbar-text, .85),
                mat.get-color-from-palette($background, navbar, .85)
            );

            .mat-icon {
                color: if(
                    $is-dark,
                    mat.get-color-from-palette($foreground, navbar-text, .6),
                    mat.get-color-from-palette($background, navbar, .85)
                );
            }

            &:hover {
                background-color: rgba($menu-background-hover, .08);
            }
        }
    }
}

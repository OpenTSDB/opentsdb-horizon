// **
// * This file is part of OpenTSDB.
// * Copyright (C) 2021  Yahoo.
// *
// * Licensed under the Apache License, Version 2.0 (the "License");
// * you may not use this file except in compliance with the License.
// * You may obtain a copy of the License at
// *
// *   http://www.apache.org/licenses/LICENSE-2.0
// *
// * Unless required by applicable law or agreed to in writing, software
// * distributed under the License is distributed on an "AS IS" BASIS,
// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// * See the License for the specific language governing permissions and
// * limitations under the License.
// *

 @import 'loader-component';

$mini-nav-dimension: 300px;
$mini-nav-font-size: mat-font-size(map-get($app-fontface-config, sans), caption);

$bar-dimension: 32px;
$bar-spacing: 2px;

$toolbar-height: ($bar-dimension + ($bar-spacing*2));

$action-bar-height: ($bar-dimension + ($bar-spacing*4));
$action-bar-button-height: ($bar-dimension - ($bar-spacing*2));

:host.mini-navigator-component {
    display: flex;
    flex-direction: column;
    flex: 1;
    max-width: 100%;
    min-width: 100%;

    .mat-icon {
        @include sizeDenaliIcon(12px);
    }

    .mat-icon-button {
        &,
        .mat-button-wrapper,
        .mat-icon {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        &,
        .mat-icon {
            width: 24px;
            height: 24px;
        }

        .mat-button-wrapper,
        .mat-icon {
            line-height: 1;
        }

        .mat-icon {
            font-size: 18px;
        }
    }

    .mini-navigator-toolbar {
        &,
        .mat-toolbar-row {
            height: $toolbar-height;
            min-height: $toolbar-height;
        }

        .mat-toolbar-row {
            padding: 0 $bar-spacing;
            font-size: $mini-nav-font-size;
        }

        .mat-icon-button {
            width: $bar-dimension;
            height: $bar-dimension;
            line-height: $bar-dimension;
        }

        .nav-item {
            display: flex;
            align-items: center;
        }

        .nav-item.back-to-master {
            margin-right: ($bar-spacing*2);
            width: 24px;
            transform: translateX(0);
            transition: all 200ms ease-in-out;
        }

        .nav-item.add-folder {
            margin-right: ($bar-spacing*2);

            .mat-icon {
                font-size: 18px;
            }
        }

        &.is-master-panel {
            .nav-item.back-to-master {
                margin-right: ($bar-spacing*3);
                width: 0;
                transform: translateX(-50px);
            }
        }
    }

    .mini-navigator-actions {
        display: flex;
        align-items: center;
        padding: 0 ($bar-spacing*4);
        height: ($action-bar-height + $bar-spacing);
        max-height: 100%;
        min-height: ($action-bar-height + $bar-spacing);

        .mat-button,
        .mat-flat-button,
        .mat-stroked-button {
            line-height: $action-bar-button-height;
            font-size: $mini-nav-font-size;
        }
    }

    // navigator panel
    ::ng-deep .navigator-panel {
        max-height: 100%;

        .navigator-panel-wrapper {
            display: flex;
            height: 100%;
            position: relative;
        }

        ul {
            position: absolute;
            top: 0;
            bottom: 0;
        }

        ul li {
            overflow: overlay;
        }

        @-moz-document url-prefix() {
            ul li {
                overflow: auto;
            }
        }
    }

    // FOLDERS LIST
    .mini-navigator-folders {
        display: flex;
        flex-direction: column;

        .mat-list .mat-list-item,
        .mat-nav-list .mat-list-item {

            .folder-icon,
            .goto-next-folder {
                margin-right: 8px;
                color: inherit;
            }
        }

        .folder-list.mat-list-base {
            padding: 0;
        }

        .folder-nav-item.mat-list-item {
            height: 32px;

            ::ng-deep .mat-list-item-content {
                padding: 0 8px;
            }
        }
    }

    // FOLDER ITEM
    .mini-navigator-folder-item {
        flex: 1;
        display: flex;
        justify-content: stretch;
        align-items: stretch;
        height: 36px;
        font-weight: 300;
        font-size: 12px;

        &.is-editing {
            margin-right: 12px;
        }

        .mat-icon {
            @include sizeDenaliIcon(12px);
        }

        .folder-icon {
            margin-right: 8px;
        }

        .list-item {
            display: flex;
            align-items: center;

            &.edit-form {
                &,
                .mat-form-field {
                    flex: 1;
                }
                .mat-form-field-prefix {
                    margin-left: 6px;
                }
            }

            &.goto-next-folder {
                margin-right: 8px;
            }
        }

        .folder-name {
            span {
                max-width: 198px;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
            }
        }
    }
}

// CDK
$dnav-width: $mini-nav-dimension + 2px;
$dnav-height: $mini-nav-dimension + 6px;

@at-root ::ng-deep {
    .dnav-cdk-mini-navigator.mat-menu-panel {
        overflow: hidden;
        max-width: $dnav-width;
        max-height: $dnav-height;

        .mat-menu-content {
            display: flex;

            &,
            &:not(:empty) {
                padding-top: 0px;
                padding-bottom: 0px;
            }
        }

        .mat-menu-item {
            padding: 0;
            width: $dnav-width;
            height: $dnav-height;
            line-height: initial;
            display: flex;
            flex: 1;

            .mat-icon {
                margin-right: initial;
            }
        }
    }
}

// * THEME VARIANTS
@include init-component-variants() {

    $cssVarMap: get-theme-css-variables($theme-name);
    $cssText: get-theme-css-text($theme-name);

    $status-success: mat-color($other, status-success);

    // TODO: Need to add navbar-config to theme
    /*$sn-light: map-get($navbar-config, sn-light);
    $sn-dark: map-get($navbar-config, sn-dark);
    $sn-light-text: map-get($navbar-config, sn-light-text);
    $sn-dark-text: map-get($navbar-config, sn-dark-text);
    $sn-seperator: map-get($navbar-config, sn-seperator);
    $sn-active: map-get($navbar-config, sn-active);*/

    $divider: mat-color($foreground, divider);

    $navbar-background: mat-color($background, navbar);
    $navbar-text: mat-color($foreground, navbar-text);

    $text-color: mat-color($background, navbar);
    $navbar-text-color: mat-color($foreground, navbar-text);

    $menu-background: mat-color($background, card);
    // TODO: need to have preprocessed colors in the theme-config
    $menu-background-raw-value: _mat-convert-variable-to-color(map-get($background, card), $cssVarMap);
    $menu-background-hover: find-color-invert($menu-background-raw-value);

    $item-text: if(
        $is-dark,
        mat-color($foreground, navbar-text, .6),
        mat-color($background, navbar, .85)
    );
    $icon-color: $item-text;

    $menu-divider: if(
        $is-dark,
        $divider,
        $navbar-background
    );

    :host.mini-navigator-component {
        background-color: if(
            $is-dark,
            lighten($menu-background-raw-value, 15%),
            $menu-background
        );

        .mini-navigator-toolbar {
            background: transparent;
            color: if(
                $is-dark,
                mat-color($foreground, navbar-text, .6),
                mat-color($background, navbar, .85)
            );
            box-shadow: inset 0 -1px 0 0 if(
                $is-dark,
                mat-color($foreground, divider, .12),
                mat-color($background, navbar, .12)
            );
        }

        .mini-navigator-actions {
            color: if(
                $is-dark,
                mat-color($foreground, navbar-text, .6),
                mat-color($background, navbar, .85)
            );
            box-shadow: inset 0 1px 0 0 if(
                $is-dark,
                mat-color($foreground, divider, .12),
                mat-color($background, navbar, .12)
            );
        }

        // FOLDERS LIST
        .mini-navigator-folders {
            // content here

            .mat-list .mat-list-item,
            .mat-nav-list .mat-list-item {
                color: if(
                    $is-dark,
                    mat-color($foreground, navbar-text, .65),
                    mat-color($background, navbar, .65)
                );

                &.is-active,
                &.is-selected {
                    color:  mat-color($foreground, navbar-text, .85);
                }

                &.is-selected {
                    background-color: mat-color($background, navbar);
                }

                &:not(:last-child) {
                    border-bottom: 1px solid if(
                        $is-dark,
                        mat-color($foreground, divider, .07),
                        mat-color($background, navbar, .07)
                    );
                }

                &:first-child {
                    border-top: 1px solid transparent;
                }
            }

        }

        // FOLDER ITEM
        .mini-navigator-folder-item {
            .save-folder-name {
                color: mat-color($other, status-success);
            }

            .list-item.edit-form {
                .mat-form-field {
                    .mat-input-element::placeholder {
                        color:  mat-color($foreground, navbar-text, .25);
                    }
                }
            }

            .dnav-folder-menu {
                .mat-icon-button {
                    background: rgba($black, .2);
                }
            }
        }
    }

    // cdk items
    ::ng-deep {
        .dnav-cdk-mini-navigator.mat-menu-panel {
            background-color: if(
                $is-dark,
                lighten($menu-background-raw-value, 15%),
                mat-color($background, card)
            );
            border: 1px solid mat-color($background, navbar, .15);

            .mat-menu-item {
                color: if(
                    $is-dark,
                    mat-color($foreground, navbar-text, .85),
                    mat-color($background, navbar, .85)
                );

                .mat-icon {
                    color: if(
                        $is-dark,
                        mat-color($foreground, navbar-text, .6),
                        mat-color($background, navbar, .85)
                    );
                }

                &:hover {
                    background-color: rgba($menu-background-hover, .08);
                }
            }
        }
    }

}

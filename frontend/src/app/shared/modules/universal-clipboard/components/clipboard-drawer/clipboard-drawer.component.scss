// **
// * This file is part of OpenTSDB.
// * Copyright (C) 2021  Yahoo.
// *
// * Licensed under the Apache License, Version 2.0 (the "License");
// * you may not use this file except in compliance with the License.
// * You may obtain a copy of the License at
// *
// *   http://www.apache.org/licenses/LICENSE-2.0
// *
// * Unless required by applicable law or agreed to in writing, software
// * distributed under the License is distributed on an "AS IS" BASIS,
// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// * See the License for the specific language governing permissions and
// * limitations under the License.
// *

@import "loader-base";

$navbar-height: map-get($navbar-config, "navbar-height");
$logo-height: map-get($navbar-config, "logo-height");

:host.clipboard-drawer {
    @include mat-elevation(3);
    overflow: hidden;
    position: relative;
    z-index: 10;
    max-width: 300px;
    width: 100%;

    .selection-checkbox {
        margin-right: 8px;
    }

    .clipboard-drawer-wrap {
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        display: flex;
        flex-direction: column;
        width: 300px;

        .gif-spinner {
            margin-right: 6px;
        }
    }

    .progress-indicator {
        padding: 8px 4px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
        font-weight: bold;
    }

    .clipboard-header.mat-toolbar {
        @include mat-elevation(0);
        @include unselectable;
        background: transparent;

        .nav-item {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        ::ng-deep {
            .mat-toolbar-row {
                padding: 0;
            }

            &.mat-toolbar-multiple-rows,
            &.mat-toolbar-single-row {
                min-height: $navbar-height !important;
                height: $navbar-height;
            }
        }
    }

    .clipboard-selector {
        padding: 0 10px;
        font-size: 12px;

        .mat-form-field {
            width: 100%;

            ::ng-deep {
                .mat-form-field-wrapper {
                    padding-bottom: 0;
                }

                .mat-form-field-underline {
                    top: 100%;
                }
            }
        }
    }

    .mat-icon {
        height: 12px;
        width: 12px;
        font-size: 100%;
    }

    .mat-icon-button {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 24px;
        height: 24px;

        ::ng-deep {
            .mat-button-wrapper {
                line-height: 1;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .mat-icon {
                line-height: 1;
                width: 24px;
                height: 24px;
                font-size: 18px;
                display: flex;
                align-items: center;
                justify-content: center;
            }
        }
    }

    .clipboard-content-batch-controls {
        padding: 6px;
        display: flex;

        .flex-spacer {
            display: inline-flex;
            justify-content: center;
            opacity: 0.6;
            font-size: 10px;
        }
    }

    .clipboard-content {
        flex: 1;
        display: flex;
    }

    .clipboard-item-list {
        flex: 1;
        padding-top: 0;

        .clipboard-item-list-viewport {
            min-height: 100%;
        }
    }

    .clipboard-content-scroller {
        display: flex;
        flex: 1;
    }

    .create-clipboard-form {
        padding: 16px;

        .title {
            margin-bottom: 16px;
        }

        .actions {
            margin-top: 20px;

            .mat-flat-button,
            .mat-stroked-button {
                &:not(:first-child) {
                    margin-left: 6px;
                }
            }
        }

        .input-control .mat-form-field {
            width: 100%;

            ::ng-deep .mat-form-field-subscript-wrapper {
                top: 100%;
            }
        }
    }

    .clipboard-item.mat-expansion-panel {
        border-radius: 0;

        &:first-of-type {
            border-top-right-radius: 0;
            border-top-left-radius: 0;
        }

        &:last-of-type {
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
        }

        ::ng-deep .mat-expansion-panel-header {
            padding: 0 6px;

            .mat-content {
                font-size: 10px;
            }

            .widget-type-icon {
                margin-right: 4px;
            }

            .clipboard-item-menu-trigger.mat-icon-button {
                opacity: 0;
                transition: opacity 200ms ease-in;

                .mat-icon {
                    @include sizeDenaliIcon(12px);
                    justify-content: center;
                    margin-left: -2px;
                }
            }

            &:hover {
                .clipboard-item-menu-trigger.mat-icon-button {
                    opacity: 1;
                }
            }
        }

        ::ng-deep .mat-expansion-panel-content {
            .mat-expansion-panel-body {
                // padding: 0 12px 6px;
                padding: 0;
                font-size: 10px;

                .preview {
                    img {
                        width: 100%;
                        height: 80px;
                    }
                }

                .item-detail {
                    padding: 0 12px;

                    &:last-child {
                        padding-bottom: 6px;
                    }
                }
            }

            .mat-action-row {
                justify-content: flex-start;
                font-size: 10px;
                padding: 4px 2px;

                .mat-button {
                    font-size: 10px;
                    min-width: 32px;
                    line-height: 18px;
                    padding: 0 4px;
                }
            }
        }

        ::ng-deep .mat-expansion-panel-header-title {
            margin-right: 0;

            .item-select-control,
            .widget-type-icon,
            .widget-title {
                display: inline-flex;
                align-items: center;
            }
        }
    }

    $widgetSize: 25px;
    .widget-type-icon {
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;

        &::after {
            content: "";
            display: block;
            overflow: hidden;
            width: $widgetSize;
            height: $widgetSize;
            background-repeat: no-repeat;
            background-size: (
                $widgetSize * 4
            ); // four columns of icons * 50px = 200px
            background-image: url(/assets/widget-icon-sprite.png);
        }

        &.widget-icon-bar-graph::after {
            background-position: (-($widgetSize)) 0px;
        }

        &.widget-icon-area-graph::after {
            background-position: 0px 0px;
        }

        &.widget-icon-line-chart::after {
            background-position: (-($widgetSize * 2)) (-($widgetSize));
        }

        &.widget-icon-heatmap::after {
            background-position: (-($widgetSize)) (-($widgetSize));
        }

        &.widget-icon-topn-chart::after {
            background-position: (-($widgetSize * 3)) (-($widgetSize));
        }

        &.widget-icon-big-number::after {
            background-position: (-($widgetSize * 2)) 0px;
        }

        &.widget-icon-donut-chart::after {
            background-position: 0px (-($widgetSize));
        }

        &.widget-icon-statuses::after {
            background-position: (-($widgetSize * 3)) 0px;
        }

        &.widget-icon-notes::after {
            background-position: 0px (-($widgetSize * 2));
        }

        &.widget-icon-events::after {
            background-position: (-($widgetSize)) (-($widgetSize * 2));
        }

        &.widget-icon-table::after {
            background-position: (-($widgetSize * 3)) (-($widgetSize * 2));
        }
    }
}

// CDK ITEMS (these are at document root level)
@at-root ::ng-deep {
    .confirmation-menu.mat-menu-panel {
        .mat-menu-content,
        .confirmation-card.mat-card {
            padding: 0;
            font-size: 12px;
            font-weight: 300;
        }

        .confirmation-card.mat-card {
            .mat-card-content {
                padding: 16px;
                margin: 0;
            }

            .mat-card-actions {
                padding: 0;
                margin: 0;
                display: flex;

                .mat-button {
                    flex: 1;
                    border-radius: 0;
                    margin: 0;
                }

                .mat-icon {
                    @include sizeDenaliIcon(12px);
                    margin-right: 6px;
                }
            }
        }
    }

    .clipboard-action-menu,
    .clipboard-item-action-menu {
        .mat-menu-content:not(:empty) {
            padding: 8px;
        }

        .mat-menu-item {
            font-size: 12px;
            font-weight: 300;
            height: 24px;
            line-height: 24px;

            .mat-icon {
                @include sizeDenaliIcon(12px);
            }
        }
    }
}

// * THEME VARIANTS
@include init-component-variants() {

    $cssVarMap: get-theme-css-variables($theme-name);

    /* navbar config */
    // TODO: need to get this navbar config into theme somehow
    $sn-light: map-get($navbar-config, sn-light);
    $sn-dark: map-get($navbar-config, sn-dark);
    $sn-light-text: map-get($navbar-config, sn-light-text);
    $sn-dark-text: map-get($navbar-config, sn-dark-text);
    $sn-seperator: map-get($navbar-config, sn-seperator);
    $sn-active: map-get($navbar-config, sn-active);

    $menu-background: mat-color($background, card);
    $menu-background-raw-value: _mat-convert-variable-to-color(map-get($background, card), $cssVarMap);
    $menu-background-hover: find-color-invert($menu-background-raw-value);

    $link: mat-color($foreground, link);
    $link-raw-value: _mat-convert-variable-to-color(map-get($foreground, link), $cssVarMap);
    $link-inverse: find-color-invert($link-raw-value);

    :host.clipboard-drawer {
        background: mat-color($background, card);

        .progress-indicator {
            color: rgba($white, 0.85);
            background: mat-color($other, status-success);
            border-bottom: 1px solid mat-color($foreground, divider);
            border-top: 1px solid mat-color($foreground, divider);
        }

        .clipboard-header.mat-toolbar {
            // background: mat-color($background, navbar, .5);
            border-bottom: 1px solid mat-color($foreground, divider, 0.07);
            color: if(
                $is-dark,
                mat-color($foreground, navbar-text),
                mat-color($background, navbar)
            );

            .nav-item.icon-nav {
                background: if(
                    $is-dark,
                    mat-color($background, navbar, 0.5),
                    mat-color($background, navbar, 0.1)
                );
            }

            .nav-item.icon-nav:not(:last-child) {
                border-right: 1px solid mat-color($foreground, divider, 0.07);
            }

            .nav-item:hover {
                background: if(
                    $is-dark,
                    mat-color($background, navbar, 0.1),
                    mat-color($background, navbar, 0.2)
                );
                cursor: pointer;
            }

            .nav-item.icon-nav.is-active {
                background: transparent;
                color: if(
                    $is-dark,
                    mat-color($foreground, navbar-text),
                    mat-color($background, navbar)
                );
            }

            &.is-master-panel {
                .header-label {
                    color: mat-color($background, navbar, 0.85);
                }
            }
        }

        .clipboard-item-list {
            border-top: 1px solid mat-color($foreground, divider);
        }

        .clipboard-item.mat-expansion-panel {
            ::ng-deep .mat-expansion-panel-header {
                .clipboard-item-menu-trigger {
                    background: rgba($black, 0.1);
                }
            }
        }
    }


    // cdk items
    ::ng-deep {
        .confirmation-menu.mat-menu-panel {
            .confirmation-card.mat-card {
                box-shadow: none;

                .mat-card-actions {
                    border-top: 1px solid mat-color($foreground, divider);

                    .mat-button:not(:last-child) {
                        border-right: 1px solid mat-color($foreground, divider);
                    }

                    .mat-button.confirm-button {
                        .mat-icon {
                            color: mat-color($other, status-success);
                        }
                    }

                    .mat-button.cancel-button {
                        .mat-icon {
                            color: mat-color($other, status-error);
                        }
                    }
                }
            }
        }

        .clipboard-action-menu,
        .clipboard-item-action-menu {
            background-color: if(
                $is-dark,
                lighten($menu-background-raw-value, 15%),
                $menu-background
            );
            border: 1px solid mat-color($background, navbar, 0.15);

            .mat-menu-item {
                color: if(
                    $is-dark,
                    mat-color($foreground, navbar-text, .85),
                    mat-color($background, navbar, .85)
                );

                .mat-icon {
                    color: if(
                        $is-dark,
                        mat-color($foreground, navbar-text, 0.5),
                        mat-color($background, navbar, 0.5)
                    );
                }

                &:hover {
                    background-color: if(
                        $is-dark,
                        rgba($menu-background-hover, 0.12),
                        rgba($menu-background-hover, 0.08)
                    );
                }
            }
        }
    }
}

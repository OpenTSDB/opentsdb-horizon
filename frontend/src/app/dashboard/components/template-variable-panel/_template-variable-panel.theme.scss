@mixin template-variable-panel-component-theme() {
    .template-variable-panel-component {
        background-color: mat-color($background, card);
        //color: mat-color($foreground, navbar-text);
        border-bottom: 1px solid mat-color($foreground, divider);

        &.is-edit-mode {
            background-color: mat-color($background, card);
            color: mat-color($foreground, text);
        }

        .error-msg {
            color: mat-color($warn, default);
        }

        .variable-list-wrapper {
            .varlist {
                .mat-form-field {
                    &.mat-form-field-appearance-fill {
                        .mat-form-field-flex {
                            background-color: mat-color($primary, default, 0.08);
                        }

                        .mat-form-field-underline::before {
                            background-color: rgba(0,0,0,0); // this is transparent
                        }

                        &:hover:not(.mat-focused) {
                            .mat-form-field-flex {
                                background-color: mat-color($primary, default, .1);
                            }

                            .mat-form-field-underline {
                                background-color: rgba(0,0,0,0); // this is transparent

                                .mat-form-field-ripple {
                                    background-color: mat-color($primary, default, 0.3);
                                }
                            }
                        }

                        &.mat-focused,
                        &:hover {
                            .mat-form-field-flex {
                                background-color: mat-color($primary, default, .08);
                            }
                        }
                    }
                }
            }
        }

        // list-view controls

        .variable-form-wrapper {
            .namespace-column {
                border-right: 1px solid mat-color($foreground, divider);

                .mat-chip-list-wrapper {
                    .mat-standard-chip {
                        background-color: if(
                            $is-dark,
                            mat-color($primary, default, .6),
                            mat-color($primary, default, .1)
                        );
                    }
                }
            }

            .filters-column {
                table {
                    thead tr {
                        border-bottom: 1px solid rgba($black,.05)
                    }
                }
            }

            .namespace-required-message {
                background: mat-color($foreground, divider);
            }
        }

        .variable-action-controls {
            border-top: 1px solid mat-color($foreground, divider);
        }

        // form fields for list-view
        .dashboard-template-variable.mat-form-field {
            .mat-form-field-prefix {
                background: mat-color($primary, default, .1);

                .automode {
                    color: rgba($black,.8);

                    &.auto-mode {
                        background-color: mat-color($other, dashboard-filter-auto-mode-bg);
                        border: 1px solid mat-color($other, dashboard-filter-auto-mode-border-color);
                    }

                    &.manual-mode {
                        background-color: mat-color($other, dashboard-filter-manual-mode-bg);
                        border: 1px solid mat-color($other, dashboard-filter-manual-mode-border-color);
                    }
                }
            }

            .mat-form-field-suffix {
                .mat-icon {
                    cursor: pointer;
                    color: mat-color($primary, default, .1);
                }

                &:hover {
                    .mat-icon {
                        color: mat-color($primary, default, .3);
                    }
                }
            }
        }

        // Edit View controls

        .variable-edit-controls {

            .settings-control.counts-control {
                justify-content: flex-end;
                padding-right: 24px;
            }

            .settings-control.filter-mode-control {
                .sliding-toggle-group {
                    background-color: mat-color($primary, default, 0.08);
                    border-bottom: 1px solid transparent;

                    .mat-tab-link {
                        &,
                        &.mat-tab-label-active {
                            color: mat-color($foreground, link);
                        }
                    }

                    .mat-ink-bar {
                        background-color: if($is-dark, rgba(#ffffff, 0.12), #ffffff);
                        border: 1px solid mat-color($foreground, link);
                    }

                    &.auto-mode {
                        .mat-ink-bar {
                            background-color: mat-color($other, dashboard-filter-auto-mode-bg);
                            border: 1px solid mat-color($other, dashboard-filter-auto-mode-border-color);
                        }
                    }

                    &.manual-mode {
                        .mat-ink-bar {
                            background-color: mat-color($other, dashboard-filter-manual-mode-bg);
                            border: 1px solid mat-color($other, dashboard-filter-manual-mode-border-color);
                        }
                    }

                    &.auto-mode,
                    &.manual-mode {
                        .mat-tab-link {
                            &,
                            &.mat-tab-label-active {
                                color: rgba($black, .85);
                            }
                        }
                    }
                }
            }
        }
    }

    // cdk items here (if any)
    .mat-autocomplete-panel.default-value-autocomplete {
        .filter-type-toggle {
            border-bottom: 2px solid mat-color($foreground, divider);
        }

        // regexp option is treated differently
        .mat-option:first-child {
            border-bottom: 1px solid mat-color($foreground, divider);
            background-color: mat-color($primary, default, 0.08);
        }
    }

    // cdk items
    .filter-scope-cdk-menu.mat-menu-panel {

        .filter-tab-nav.mat-nav-list {
            background-color: mat-color($primary, default, .1);

            .mat-list-item.selected {
                background-color: mat-color($primary, default, .1);
                box-shadow: inset 4px 0 0 -2px mat-color($primary, default);
                pointer-events: none;
            }
        }

        .filter-scope-columns {

            .filter-scope-type {
                background-color: mat-color($primary, default, .3);
                color: mat-color($foreground, text, .6);
            }

            .header-column {
                background-color: mat-color($foreground, divider);
                color: mat-color($foreground, text, .6);
            }

            .scope-column:not(:last-child) {
                border-right: 1px solid mat-color($foreground, divider);
            }

            .mat-standard-chip {
                background-color: mat-color($foreground, link, 0.15);
            }

            .mat-standard-chip:hover {
                background-color: #016eff; // TODO: needs to be in theme
                color: $white;

                .mat-icon {
                    color: currentColor;
                }
            }

            .mat-standard-chip {
                &.exclude {
                    background-color: #e8e8e8; // TODO: needs to be in theme
                    color: rgba($black, .6);
                }

                &.exclude:hover {
                    background-color: darken(#e8e8e8, 15%); // TODO: needs to be in theme
                    color: $black;

                    .mat-icon {
                        color: $black;
                    }
                    .mat-icon.exclude {
                        color: mat-color($other, status-error);
                    }
                }
            }

        }
    }

    $placeholderBG: if(
        $is-dark,
        mat-color($primary, default, .6),
        mat-color($primary, default, .1)
    );

    // TODO: this is nasty to get the old code to work with variables
    // TODO: rework this using theme values

    $cssVarMap: get-theme-css-variables($theme-name);
    $placeholderBG_color: _mat-convert-variable-to-color(map-get($primary, default), $cssVarMap);
    $divider: _mat-convert-variable-to-color(map-get($foreground, divider), $cssVarMap);
    $placeholderBorder: if(
        $is-dark,
        find-color-invert(rgba($placeholderBG_color, .6)),
        lighten($divider, 45%)
    );

    .custom-tr-drag-placeholder {
        &:after {
            background:$placeholderBG;
            box-shadow: inset 0 0 0 3px rgba($placeholderBorder, 0.5); // fake border
        }
    }

    // TODO: see todo just above
    // TODO: rework this using theme values
    $card_color: _mat-convert-variable-to-color( map-get($background, card), $cssVarMap);

    $drag-highlight: if(
        $is-dark,
        lighten($card_color, 15%),
        darken($card_color, 15%)
    );

    tr.variable-edit-controls.cdk-drag.cdk-drag-preview {
        background-color: $drag-highlight;
    }
}
